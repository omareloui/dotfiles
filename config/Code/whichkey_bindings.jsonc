{
  // move this to settings.json if needed to use nvim extension.
  // and in nvim add
  //
  // if vim.g.vscode then
  //  map("n", "<leader>", "<Cmd>call VSCodeNotify('whichkey').show")
  // end

  "whichkey.sortOrder": "alphabetically",
  "whichkey.delay": 800,
  "whichkey.bindings": [
    {
      "key": ";",
      "name": "commands",
      "type": "command",
      "command": "workbench.action.showCommands"
    },
    {
      "key": "/",
      "name": "Comment",
      "type": "command",
      "command": "vscode-neovim.send",
      "args": "<C-/>"
    },
    {
      "key": "b",
      "name": "Buffers/Editors...",
      "type": "bindings",
      "bindings": [
        {
          "key": "b",
          "name": "Show all buffers/editors",
          "type": "command",
          "command": "workbench.action.showAllEditors"
        },
        {
          "key": "d",
          "name": "Close active editor",
          "type": "command",
          "command": "workbench.action.closeActiveEditor"
        },
        {
          "key": "h",
          "name": "Move editor into left group",
          "type": "command",
          "command": "workbench.action.moveEditorToLeftGroup"
        },
        {
          "key": "j",
          "name": "Move editor into below group",
          "type": "command",
          "command": "workbench.action.moveEditorToBelowGroup"
        },
        {
          "key": "k",
          "name": "Move editor into above group",
          "type": "command",
          "command": "workbench.action.moveEditorToAboveGroup"
        },
        {
          "key": "l",
          "name": "Move editor into right group",
          "type": "command",
          "command": "workbench.action.moveEditorToRightGroup"
        },
        {
          "key": "m",
          "name": "Close other editors",
          "type": "command",
          "command": "workbench.action.closeOtherEditors"
        },
        {
          "key": "n",
          "name": "Next editor",
          "type": "command",
          "command": "workbench.action.nextEditor"
        },
        {
          "key": "p",
          "name": "Previous editor",
          "type": "command",
          "command": "workbench.action.previousEditor"
        },
        {
          "key": "N",
          "name": "New untitled editor",
          "type": "command",
          "command": "workbench.action.files.newUntitledFile"
        },
        {
          "key": "u",
          "name": "Reopen closed editor",
          "type": "command",
          "command": "workbench.action.reopenClosedEditor"
        },
        {
          "key": "y",
          "name": "Copy buffer to clipboard",
          "type": "commands",
          "commands": [
            "editor.action.selectAll",
            "editor.action.clipboardCopyAction",
            "cancelSelection"
          ]
        }
      ]
    },
    // FIXME: doesn't work right on selecting text
    {
      "key": "d",
      "name": "Delete to void",
      "type": "command",
      "command": "vscode-neovim.send",
      "args": "\"_d"
    },
    {
      "key": "D",
      "name": "Delete to void",
      "type": "command",
      "command": "vscode-neovim.send",
      "args": "\"_D"
    },
    // {
    //   "key": "d",
    //   "name": "Debug...",
    //   "type": "bindings",
    //   "bindings": [
    //     {
    //       "key": "d",
    //       "name": "Start debug",
    //       "type": "command",
    //       "command": "workbench.action.debug.start"
    //     },
    //     {
    //       "key": "S",
    //       "name": "Stop debug",
    //       "type": "command",
    //       "command": "workbench.action.debug.stop"
    //     },
    //     {
    //       "key": "c",
    //       "name": "Continue debug",
    //       "type": "command",
    //       "command": "workbench.action.debug.continue"
    //     },
    //     {
    //       "key": "p",
    //       "name": "Pause debug",
    //       "type": "command",
    //       "command": "workbench.action.debug.pause"
    //     },
    //     {
    //       "key": "r",
    //       "name": "Run without debugging",
    //       "type": "command",
    //       "command": "workbench.action.debug.run"
    //     },
    //     {
    //       "key": "R",
    //       "name": "Restart debug",
    //       "type": "command",
    //       "command": "workbench.action.debug.restart"
    //     },
    //     {
    //       "key": "i",
    //       "name": "Step into",
    //       "type": "command",
    //       "command": "workbench.action.debug.stepInto"
    //     },
    //     {
    //       "key": "s",
    //       "name": "Step over",
    //       "type": "command",
    //       "command": "workbench.action.debug.stepOver"
    //     },
    //     {
    //       "key": "o",
    //       "name": "Step out",
    //       "type": "command",
    //       "command": "workbench.action.debug.stepOut"
    //     },
    //     {
    //       "key": "b",
    //       "name": "Toggle breakpoint",
    //       "type": "command",
    //       "command": "editor.debug.action.toggleBreakpoint"
    //     },
    //     {
    //       "key": "B",
    //       "name": "Toggle inline breakpoint",
    //       "type": "command",
    //       "command": "editor.debug.action.toggleInlineBreakpoint"
    //     },
    //     {
    //       "key": "j",
    //       "name": "Jump to cursor",
    //       "type": "command",
    //       "command": "debug.jumpToCursor"
    //     },
    //     {
    //       "key": "v",
    //       "name": "REPL",
    //       "type": "command",
    //       "command": "workbench.debug.action.toggleRepl"
    //     },
    //     {
    //       "key": "w",
    //       "name": "Focus on watch window",
    //       "type": "command",
    //       "command": "workbench.debug.action.focusWatchView"
    //     },
    //     {
    //       "key": "W",
    //       "name": "Add to watch",
    //       "type": "command",
    //       "command": "editor.debug.action.selectionToWatch"
    //     }
    //   ]
    // },
    {
      "key": "e",
      "name": "Toggle Explorer",
      "type": "command",
      "command": "workbench.action.toggleSidebarVisibility"
    },
    {
      "key": "f",
      "name": "Open file",
      "type": "command",
      "command": "workbench.action.quickOpen"
    },
    // {
    //   "key": "f",
    //   "name": "Find & Replace...",
    //   "type": "bindings",
    //   "bindings": [
    //     {
    //       "key": "f",
    //       "name": "File",
    //       "type": "command",
    //       "command": "editor.action.startFindReplaceAction"
    //     },
    //     {
    //       "key": "s",
    //       "name": "Symbol",
    //       "type": "command",
    //       "command": "editor.action.rename",
    //       "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    //     },
    //     {
    //       "key": "p",
    //       "name": "Project",
    //       "type": "command",
    //       "command": "workbench.action.replaceInFiles"
    //     }
    //   ]
    // },
    {
      "key": "g",
      "name": "Git...",
      "type": "bindings",
      "bindings": [
        {
          "key": "b",
          "name": "Checkout",
          "type": "command",
          "command": "git.checkout"
        },
        {
          "key": "c",
          "name": "Commit",
          "type": "command",
          "command": "git.commit"
        },
        {
          "key": "d",
          "name": "Delete Branch",
          "type": "command",
          "command": "git.deleteBranch"
        },
        {
          "key": "f",
          "name": "Fetch",
          "type": "command",
          "command": "git.fetch"
        },
        {
          "key": "i",
          "name": "Init",
          "type": "command",
          "command": "git.init"
        },
        {
          "key": "m",
          "name": "Merge",
          "type": "command",
          "command": "git.merge"
        },
        {
          "key": "p",
          "name": "Publish",
          "type": "command",
          "command": "git.publish"
        },
        {
          "key": "s",
          "name": "Stash",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "S",
          "name": "Stage",
          "type": "command",
          "command": "git.stage"
        },
        {
          "key": "U",
          "name": "Unstage",
          "type": "command",
          "command": "git.unstage"
        }
      ]
    },
    {
      "key": "h",
      "name": "Split Horizontal",
      "type": "command",
      "command": "workbench.action.splitEditorDown"
    },
    {
      "key": "i",
      "name": "Insert...",
      "type": "bindings",
      "bindings": [
        {
          "key": "j",
          "name": "Insert line below",
          "type": "command",
          "command": "editor.action.insertLineAfter"
        },
        {
          "key": "k",
          "name": "Insert line above",
          "type": "command",
          "command": "editor.action.insertLineBefore"
        },
        {
          "key": "s",
          "name": "Insert snippet",
          "type": "command",
          "command": "editor.action.insertSnippet"
        }
      ]
    },
    {
      "key": "m",
      "name": "minimap",
      "type": "command",
      "command": "editor.action.toggleMinimap"
    },
    {
      "key": "n",
      "name": "highlight",
      "type": "command",
      "command": "vscode-neovim.send",
      "args": ":noh<CR>"
    },
    {
      "key": "p",
      "name": "Paste from clipboard",
      "type": "command",
      "command": "vscode-neovim.send",
      "args": "\"+p"
    },
    // FIXME: The replace word doesn't work as it should.
    {
      "key": "S",
      "name": "Replace word",
      "type": "command",
      "command": "vscode-neovim.send",
      "args": ":%s/\\<<C-r><C-w>\\>/<C-r><C-w>/gI"
    },
    {
      "key": "s",
      "name": "Show...",
      "type": "bindings",
      "bindings": [
        {
          "key": "e",
          "name": "Show explorer",
          "type": "command",
          "command": "workbench.view.explorer"
        },
        {
          "key": "s",
          "name": "Show search",
          "type": "command",
          "command": "workbench.view.search"
        },
        {
          "key": "g",
          "name": "Show source control",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "t",
          "name": "Show test",
          "type": "command",
          "command": "workbench.view.extension.test"
        },
        {
          "key": "r",
          "name": "Show remote explorer",
          "type": "command",
          "command": "workbench.view.remote"
        },
        {
          "key": "x",
          "name": "Show extensions",
          "type": "command",
          "command": "workbench.view.extensions"
        },
        {
          "key": "p",
          "name": "Show problem",
          "type": "command",
          "command": "workbench.actions.view.problems"
        },
        {
          "key": "o",
          "name": "Show output",
          "type": "command",
          "command": "workbench.action.output.toggleOutput"
        },
        {
          "key": "d",
          "name": "Show debug console",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        }
      ]
    },
    {
      "key": "t",
      "name": "Toggle Terminal",
      "type": "command",
      "command": "workbench.action.togglePanel"
    },
    {
      "key": "T",
      "name": "UI toggles...",
      "type": "bindings",
      "bindings": [
        {
          "key": "b",
          "name": "Toggle side bar visibility",
          "type": "command",
          "command": "workbench.action.toggleSidebarVisibility"
        },
        {
          "key": "j",
          "name": "Toggle panel visibility",
          "type": "command",
          "command": "workbench.action.togglePanel"
        },
        {
          "key": "F",
          "name": "Toggle full screen",
          "type": "command",
          "command": "workbench.action.toggleFullScreen"
        },
        {
          "key": "s",
          "name": "Select theme",
          "type": "command",
          "command": "workbench.action.selectTheme"
        },
        {
          "key": "m",
          "name": "Toggle maximized panel",
          "type": "command",
          "command": "workbench.action.toggleMaximizedPanel"
        },
        {
          "key": "t",
          "name": "Toggle tool/activity bar visibility",
          "type": "command",
          "command": "workbench.action.toggleActivityBarVisibility"
        },
        {
          "key": "T",
          "name": "Toggle tab visibility",
          "type": "command",
          "command": "workbench.action.toggleTabsVisibility"
        }
      ]
    },
    {
      "key": "v",
      "name": "Split Vertical",
      "type": "command",
      "command": "workbench.action.splitEditor"
    },
    {
      "key": "w",
      "name": "Save file",
      "command": "workbench.action.files.save"
    },
    {
      "key": "q",
      "name": "Close current file",
      "command": "workbench.action.closeActiveEditor"
    },
    // {
    //   "key": "w",
    //   "name": "Window...",
    //   "type": "bindings",
    //   "bindings": [
    //     {
    //       "key": "W",
    //       "name": "Focus previous editor group",
    //       "type": "command",
    //       "command": "workbench.action.focusPreviousGroup"
    //     },
    //     {
    //       "key": "h",
    //       "name": "Move editor group left",
    //       "type": "command",
    //       "command": "workbench.action.moveActiveEditorGroupLeft"
    //     },
    //     {
    //       "key": "j",
    //       "name": "Move editor group down",
    //       "type": "command",
    //       "command": "workbench.action.moveActiveEditorGroupDown"
    //     },
    //     {
    //       "key": "k",
    //       "name": "Move editor group up",
    //       "type": "command",
    //       "command": "workbench.action.moveActiveEditorGroupUp"
    //     },
    //     {
    //       "key": "l",
    //       "name": "Move editor group right",
    //       "type": "command",
    //       "command": "workbench.action.moveActiveEditorGroupRight"
    //     },
    //     {
    //       "key": "t",
    //       "name": "Toggle editor group sizes",
    //       "type": "command",
    //       "command": "workbench.action.toggleEditorWidths"
    //     },
    //     {
    //       "key": "m",
    //       "name": "Maximize editor group",
    //       "type": "command",
    //       "command": "workbench.action.minimizeOtherEditors"
    //     },
    //     {
    //       "key": "M",
    //       "name": "Maximize editor group and hide side bar",
    //       "type": "command",
    //       "command": "workbench.action.maximizeEditor"
    //     },
    //     {
    //       "key": "=",
    //       "name": "Reset editor group sizes",
    //       "type": "command",
    //       "command": "workbench.action.evenEditorWidths"
    //     },
    //     {
    //       "key": "z",
    //       "name": "Combine all editors",
    //       "type": "command",
    //       "command": "workbench.action.joinAllGroups"
    //     },
    //     {
    //       "key": "d",
    //       "name": "Close editor group",
    //       "type": "command",
    //       "command": "workbench.action.closeEditorsInGroup"
    //     },
    //     {
    //       "key": "x",
    //       "name": "Close all editor groups",
    //       "type": "command",
    //       "command": "workbench.action.closeAllGroups"
    //     }
    //   ]
    // },
    // FIXME: doesn't work right on selecting text
    {
      "key": "y",
      "name": "Yank to system clipboard",
      "type": "command",
      "command": "vscode-neovim.send",
      "args": "\"+y"
    },
    {
      "key": "Y",
      "name": "Yank to system clipboard",
      "type": "command",
      "command": "vscode-neovim.send",
      "args": "\"+Y"
    },
    {
      "key": "x",
      "name": "Make the current file executable",
      "type": "command",
      "command": "vscode-neovim.send",
      "args": ":!chmod +x %<CR>"
    },
    {
      "key": "z",
      "name": "Toggle zen mode",
      "type": "command",
      "command": "workbench.action.toggleZenMode"
    }
  ]
}
